#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE FAILURE OF THE SCRIPT
#=================================================

ynh_abort_if_errors	# Active trap pour arrêter le script si une erreur est détectée.

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
admin=$YNH_APP_ARG_ADMIN
is_public=$YNH_APP_ARG_IS_PUBLIC
always_encrypt=$YNH_APP_ARG_ALWAYS_ENCRYPT

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THIS ARGS
#=================================================

CHECK_USER "$admin"	# Vérifie la validité de l'user admin
path_url=$(ynh_normalize_url_path $path_url)	# Vérifie et corrige la syntaxe du path.
CHECK_DOMAINPATH	# Vérifie la disponibilité du path et du domaine.
CHECK_FINALPATH	# Vérifie que le dossier de destination n'est pas déjà utilisé.

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================

ynh_app_setting_set $app admin $admin
ynh_app_setting_set $app domain $domain
ynh_app_setting_set $app is_public $is_public
ynh_app_setting_set $app always_encrypt $always_encrypt

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# FIND AND OPEN A PORT
#=================================================

port=$(ynh_find_port 8095)	# Cherche un port libre.
# Ouvre le port dans le firewall
ALL_QUIET sudo yunohost firewall allow --no-upnp TCP $port
ynh_app_setting_set $app port $port

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

ynh_app_setting_set $app final_path $final_path
SETUP_SOURCE	# Télécharge la source, décompresse et copie dans $final_path

#=================================================
# INSTALL DEPENDENCIES
#=================================================

ynh_install_app_dependencies carton perlmagick

#=================================================
# NGINX CONFIGURATION
#=================================================

# Copie le fichier de config nginx
sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/$app.conf
# Change variables in nginx configuration
sudo sed -i "s@__PATH__@$path_url@g" /etc/nginx/conf.d/$domain.d/$app.conf
sudo sed -i "s@__PORT__@$port@g" /etc/nginx/conf.d/$domain.d/$app.conf

#=================================================
# CREATE DEDICATED USER
#=================================================

ynh_system_user_create $app	# Créer un utilisateur système dédié à l'app

#=================================================
# SPECIFIC SETUP
#=================================================
# SETUP LUTIM
#=================================================

## Copie et configuration du fichier de conf.
sudo cp ../conf/lutim.conf.template "$final_path/lutim.conf"
sudo sed -i "s@__DOMAIN__@$domain@g" "$final_path/lutim.conf"
sudo sed -i "s@__PATH__@$path_url@g" "$final_path/lutim.conf"
sudo sed -i "s@__PORT__@$port@g" "$final_path/lutim.conf"
sudo sed -i "s@__ENCRYPT__@$always_encrypt@g" "$final_path/lutim.conf"
secret=$(ynh_string_random)
sudo sed -i "s@__SECRET__@$secret@g" "$final_path/lutim.conf"
STORE_MD5_CONFIG "lutim.conf" "$final_path/lutim.conf"	# Enregistre la somme de contrôle du fichier de config

#=================================================
# SETUP SYSTEMD
#=================================================

sudo cp ../conf/lutim.service /etc/systemd/system/$app.service
sudo chown root: /etc/systemd/system/$app.service
sudo sed -i "s@__FINALPATH__@$final_path/@g" /etc/systemd/system/$app.service
sudo sed -i "s@__APP__@$app@g" /etc/systemd/system/$app.service
## Démarrage auto du service
sudo systemctl enable $app

#=================================================
# SETUP CRON
#=================================================

sudo cp ../conf/cron_lutim /etc/cron.d/$app
sudo sed -i "s@__FINALPATH__@$final_path/@g" /etc/cron.d/$app
sudo chmod +x $final_path/script/lutim

#=================================================
# INSTALL LUTIM WITH CARTON
#=================================================

sudo mkdir -p /var/log/$app/
pushd $final_path	# cd avec une stack pour revenir en arrière
sudo carton install 2>&1 | sudo tee -a "/var/log/$app/setup_carton.log"
popd	# Revient au dossier courant avant pushd

# Configure le path du dossier perl en fonction de l'architecture système
arch_dir=$(ls -1 $final_path/local/lib/perl5/ | grep linux-gnu)
if [ "$?" -ne 0 ]
then
	ynh_die "Impossible de trouver le dossier relatif à l'architecture système."
fi
sudo sed -i "s@__ARCHDIR__@$arch_dir@g" "$final_path/script/lutim"

#=================================================
# SETUP LOG FILE
#=================================================

# Making log symbolic link to /var/log
sudo touch /var/log/$app/production.log
sudo chown $app: -R /var/log/$app
sudo ln -s /var/log/$app/production.log "$final_path/log/production.log"

#=================================================
# SECURING FILES AND DIRECTORIES
#=================================================

sudo chown -R $app: $final_path

#=================================================
# START LUTIM
#=================================================

sudo systemctl start lutim
# Set right permissions on new files created at first start
sudo chown -R $app: $final_path
sleep 2

#=================================================
# GENERIC FINALISATION
#=================================================
# SETUP LOGROTATE
#=================================================

ynh_use_logrotate

#=================================================
# ENABLE SERVICE IN ADMIN PANEL
#=================================================

sudo yunohost service add lutim -l $final_path/log/production.log

#=================================================
# SETUP SSOWAT
#=================================================

ynh_app_setting_set $app skipped_uris "/"
if [ $is_public -eq 0 ]
then	# Si l'app est privée, seul le visionnage des images reste public
	if [ "$path_url" == "/" ]; then
	    path_url=""	# Si path correspond à la racine, supprime le / pour éviter une erreur de la regex.
	fi
	# Modifie le domaine pour qu'il passe dans une regex
	domain_regex=$(echo "$domain" | sed 's@-@.@g')
	ynh_app_setting_set $app protected_regex "$domain_regex$path_url/stats$","$domain_regex$path_url/manifest.webapp$","$domain_regex$path_url/$","$domain_regex$path_url/d/.*$","$domain_regex$path_url/m/.*$"
fi

#=================================================
# RELOAD NGINX
#=================================================

sudo systemctl reload nginx
