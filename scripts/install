#!/bin/bash

# Retrieve arguments
domain=$1
path=$2
admin=$3
is_public=$4
always_encrypt=$5
app=lutim

# Check if admin exists
sudo yunohost user list --json | grep -q "\"username\": \"$admin\""
if [[ ! $? -eq 0 ]]; then
    echo "Wrong admin"
    exit 1
fi

# Vérifie la présence du / en début de path
if [ $(echo $path | cut -c1) != "/" ]; then
    path="/$path"
fi
# Vérifie l'absence du / en fin de path
pathRslash=$(echo "$path" | sed 's@/$@@')

# Check domain/path availability
sudo yunohost app checkurl $domain$path -a $app
if [[ ! $? -eq 0 ]]; then
    exit 1
fi

# Get an available port
port=8095
sudo yunohost app checkport $port
while [[ ! $? -eq 0 ]]; do
    port=$((port+1))
    sudo yunohost app checkport $port
done

# Check /var/www/$app path is available
final_path=/var/www/$app
if [ -e "$final_path" ]
then
    echo "This path already contains a folder"
    exit 1
fi

# Add settings to YunoHost
sudo yunohost app setting $app admin -v $admin
sudo yunohost app setting $app domain -v $domain
sudo yunohost app setting $app is_public -v $is_public
sudo yunohost app setting $app port -v $port
sudo yunohost app setting $app always_encrypt -v $always_encrypt


# Copy files to right place
sudo mkdir -p "$final_path"
# Création archive source: tar -czp -f lutim.tar.gz lutim
# Décompresse la source
tar -x -f ../sources/lutim.tar.gz
sudo cp -a lutim/. "$final_path"
sudo cp -a ../sources/ajouts/. "$final_path"
sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/$app.conf

# Installation du module perl carton
sudo mkdir -p /var/log/$app/
echo "Installation du module perl carton. Attention, étape très longue..."
yes | sudo cpan Carton 2>&1 | sudo tee "/var/log/$app/setup_carton.log" > /dev/null

# Installation de perlmagick, interface perl pour imagemagick
sudo apt-get install perlmagick -qy

## Copie et configuration du fichier de conf.
sudo cp ../conf/lutim.conf.template "$final_path/lutim.conf"
sudo sed -i "s@__DOMAIN__@$domain@g" "$final_path/lutim.conf"
sudo sed -i "s@__PATH__@$path@g" "$final_path/lutim.conf"
sudo sed -i "s@__PORT__@$port@g" "$final_path/lutim.conf"
if [ "$always_encrypt" = "No" ]; then
	always_encrypt=0
else
	always_encrypt=1
fi
sudo sed -i "s@__ENCRYPT__@$always_encrypt@g" "$final_path/lutim.conf"
secret=$(dd if=/dev/urandom bs=1 count=200 2> /dev/null | tr -c -d 'A-Za-z0-9' | sed -n 's/\(.\{24\}\).*/\1/p')
sudo sed -i "s@__SECRET__@$secret@g" "$final_path/lutim.conf"


# Mise en place des scripts init
sudo cp ../conf/lutim.init /etc/init.d/lutim
# sudo sed -i "s@__FINALPATH__@$final_path@g" /etc/init.d/lutim
sudo cp ../conf/lutim.default /etc/default/lutim
sudo chmod +x /etc/init.d/lutim
sudo chown root:root /etc/init.d/lutim /etc/default/lutim
sudo sed -i "s@__FINALPATH__@$final_path/@g" /etc/default/lutim

## Mise en place des crons
sudo cp ../conf/cron_lutim /etc/cron.d/$app
sudo sed -i "s@__FINALPATH__@$final_path/@g" /etc/cron.d/$app

# Installation de lutim via carton
cd $final_path
sudo carton install 2>&1 | sudo tee -a "/var/log/$app/setup_carton.log"

## Démarrage auto des scripts init
sudo update-rc.d lutim defaults
# sudo update-rc.d -f lutim remove

# Change variables in nginx configuration
sudo sed -i "s@__PATH__@$path@g" /etc/nginx/conf.d/$domain.d/$app.conf
sudo sed -i "s@__PORT__@$port@g" /etc/nginx/conf.d/$domain.d/$app.conf

# Make app public or private
sudo yunohost app setting $app skipped_uris -v "/"
if [ "$is_public" = "No" ];
then	# Si l'app est privée, seul le visionnage des images reste public
	sudo yunohost app setting $app protected_regex -v "$pathRslash/stats$","$pathRslash/manifest.webapp$","$pathRslash/$","$pathRslash/d/.*$","$pathRslash/m/.*$"
fi

# Making log symbolic link to /var/log
sudo touch /var/log/$app/production.log 
sudo chown www-data: /var/log/$app/production.log
# sudo rm -f /var/www/$app/log/production.log
sudo ln -s /var/log/$app/production.log "$final_path/log/production.log"

# Set right permissions
sudo chown -R www-data: $final_path
# Start lutim
sudo /etc/init.d/lutim start
# Set right permissions on new files created at first start
sudo chown -R www-data: "$final_path"

# Add lutim as a service
sudo yunohost service add lutim -l $final_path/log/production.log

# Reload Nginx and regenerate SSOwat conf
sudo service nginx reload
sudo yunohost app ssowatconf
