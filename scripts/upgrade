#!/bin/bash

# Récupère les infos de l'application.
ynh_version=$(sudo yunohost -v | grep "moulinette:" | cut -d' ' -f2 | cut -d'.' -f1,2)
if [ $ynh_version = "2.4" ]; then
	app=$YNH_APP_INSTANCE_NAME
else
	app=lutim
fi
domain=$(sudo yunohost app setting $app domain)
path=$(sudo yunohost app setting $app path)
is_public=$(sudo yunohost app setting $app is_public)
port=$(sudo yunohost app setting $app port)
always_encrypt=$(sudo yunohost app setting $app always_encrypt)
final_path=$(sudo yunohost app setting $app final_path)

if [ "${#final_path}" -eq 0 ]
then	# Si final_path n'est pas renseigné dans la config yunohost, cas d'ancien script, code final_path en dur
	final_path=/var/www/$app
fi


# Vérifie l'absence du / en fin de path
pathRslash=$(echo "$path" | sed 's@/$@@')
# Modifie le domaine pour qu'il passe dans une regex
domain_regex=$(echo "$domain" | sed 's@-@.@g')

# Télécharge la source
wget -nv --show-progress -i ../sources/source_url -O lutim.tar.gz
# Vérifie la somme de contrôle de la source téléchargée.
md5sum -c ../sources/source_md5 --status || (echo "Corrupt source" && false)
# Décompresse la source
tar -x -f lutim.tar.gz
# Copie les fichiers sources
sudo cp -a $(cat ../sources/source_dir)/. "$final_path"
# Copie les fichiers additionnels ou modifiés.
sudo cp -a ../sources/ajouts/. "$final_path"
# Et copie le fichier de config nginx
sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/$app.conf

# Change variables in nginx configuration
sudo sed -i "s@__PATH__@$path@g" /etc/nginx/conf.d/$domain.d/$app.conf
sudo sed -i "s@__PORT__@$port@g" /etc/nginx/conf.d/$domain.d/$app.conf

## Copie et configuration du fichier de conf.
config_file="$final_path/lutim.conf"
if [ "$(sudo yunohost app setting $app lutim.conf_file_md5)" != $(md5sum "$config_file" | cut -d' ' -f1) ]; then
	sudo cp -a "$config_file" "$config_file.backup.$(date '+%d.%m.%y_%Hh%M,%Ss')"	# Si le fichier de config a été modifié, créer un backup.
fi
sudo cp ../conf/lutim.conf.template "$final_path/lutim.conf"
sudo sed -i "s@__DOMAIN__@$domain@g" "$final_path/lutim.conf"
sudo sed -i "s@__PATH__@$path@g" "$final_path/lutim.conf"
sudo sed -i "s@__PORT__@$port@g" "$final_path/lutim.conf"
if [ "always_encrypt" = "No" ]; then
	always_encrypt=0
else
	always_encrypt=1
fi
sudo sed -i "s@__ENCRYPT__@$always_encrypt@g" "$final_path/lutim.conf"

codename=$(lsb_release -a 2>/dev/null | grep Codename | cut -f 2)
sudo yunohost app setting $app codename -v $codename
if [ "$codename" = "wheezy" ]
then	# On utilise le script init pour wheezy.
	# Mise en place du script init
	sudo cp ../conf/lutim.init /etc/init.d/lutim
	sudo cp ../conf/lutim.default /etc/default/lutim
	sudo chmod +x /etc/init.d/lutim
	sudo chown root: /etc/init.d/lutim /etc/default/lutim
	sudo sed -i "s@__FINALPATH__@$final_path/@g" /etc/default/lutim
	## Démarrage auto du service
	sudo update-rc.d lutim defaults
else	# Et le script systemd à partir de jessie
	if [ -e /etc/init.d/lutim ]
	then	# Supprime le script init.d si il existe.
		sudo rm -f /etc/default/lutim
		sudo rm -f /etc/init.d/lutim
		sudo update-rc.d -f lutim remove
	fi
	# Mise en place du script systemd
	sudo cp ../conf/lutim.service /etc/systemd/system/lutim.service
	sudo chown root:root /etc/systemd/system/lutim.service
	sudo sed -i "s@__FINALPATH__@$final_path/@g" /etc/systemd/system/lutim.service
	## Démarrage auto du service
	sudo systemctl enable lutim.service

fi

## Mise en place des crons
sudo cp ../conf/cron_lutim /etc/cron.d/$app
sudo sed -i "s@__FINALPATH__@$final_path/@g" /etc/cron.d/$app

# Configuration de logrotate
sed -i "s@__FINALPATH__@$final_path@g" ../conf/logrotate
sudo cp ../conf/logrotate /etc/logrotate.d/$app

# Mise à jour de lutim via carton
cd $final_path
sudo carton install 2>&1 | sudo tee -a "/var/log/$app/setup_carton.log"

# Make app public or private
sudo yunohost app setting $app skipped_uris -v "/"
if [ "$is_public" = "No" ];
then	# Si l'app est privée, seul le visionnage des images reste public
	sudo yunohost app setting $app protected_regex -v "$domain_regex$pathRslash/stats$","$domain_regex$pathRslash/manifest.webapp$","$domain_regex$pathRslash/$","$domain_regex$pathRslash/d/.*$","$domain_regex$pathRslash/m/.*$"
fi

# Configure les droits d'accès au fichiers
sudo chown -R www-data: $final_path
# Restart lutim
sudo service lutim restart


# Recharge la configuration Nginx
sudo service nginx reload
# Régénère la configuration de SSOwat
sudo yunohost app ssowatconf
